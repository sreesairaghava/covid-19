{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","console","log","value","className","styles","container","Grid","spacing","justify","item","xs","md","component","Card","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","Date","toDateString","URL","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","length","lineChart","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","coronaImage","alt","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.db887cc5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from \"react\";\nimport { Card, CardContent, Grid, Typography } from \"@material-ui/core\";\nimport styles from \"../Cards/Cards.module.css\";\nimport CountUp from \"react-countup\";\nimport cx from \"classnames\";\n\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n  if (!confirmed) {\n    return \"Loading...\";\n  } else {\n    console.log(confirmed.value);\n  }\n  return (\n    <div className={styles.container}>\n      <Grid container spacing={3} justify=\"center\">\n        <Grid\n          item\n          xs={12}\n          md={3}\n          component={Card}\n          className={cx(styles.card, styles.infected)}\n        >\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Infected\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              <CountUp\n                start={0}\n                end={confirmed.value}\n                duration={2.75}\n                separator=\",\"\n              />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              Number of active cases of COVID-19.\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          md={3}\n          component={Card}\n          className={cx(styles.card, styles.recovered)}\n        >\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Recovered\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              <CountUp\n                start={0}\n                end={recovered.value}\n                duration={2.75}\n                separator=\",\"\n              />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              Number of recoveries from COVID-19.\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          md={3}\n          component={Card}\n          className={cx(styles.card, styles.deaths)}\n        >\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Deaths\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              <CountUp\n                start={0}\n                end={deaths.value}\n                duration={2.75}\n                separator=\",\"\n              />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              Number of deaths caused by COVID-19.\n            </Typography>\n          </CardContent>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Cards;\n","import axios from \"axios\";\n\nconst URL = \"https://covid19.mathdro.id/api\";\n\nexport const fetchData = async (country) => {\n  let changeableUrl = URL;\n  if (country) {\n    changeableUrl = `${URL}/countries/${country}`;\n  }\n  try {\n    const {\n      data: { confirmed, recovered, deaths, lastUpdate },\n    } = await axios.get(changeableUrl);\n    return {\n      confirmed,\n      recovered,\n      deaths,\n      lastUpdate,\n    };\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${URL}/daily`);\n    const modifiedData = data.map((dailyData) => ({\n      confirmed: dailyData.confirmed.total,\n      deaths: dailyData.deaths.total,\n      date: dailyData.reportDate,\n    }));\n    return modifiedData;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchCountries = async () => {\n  try {\n    const {\n      data: { countries },\n    } = await axios.get(`${URL}/countries`);\n    return countries.map((country) => country.name);\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"../../api/index\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport styles from \"./Chart.module.css\";\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n  //ReactHook for creating dailyData\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n    fetchAPI();\n  }, []);\n  if (country.length) {\n    console.log(country);\n  } else {\n    console.log(\"Nothing\");\n  }\n  const lineChart = dailyData.length ? (\n    <Line\n      data={{\n        labels: dailyData.map(({ date }) => date),\n        datasets: [\n          {\n            data: dailyData.map(({ confirmed }) => confirmed),\n            label: \"Infected\",\n            borderColor: \"#3333ff\",\n            fill: true,\n          },\n          {\n            data: dailyData.map(({ deaths }) => deaths),\n            label: \"Deaths\",\n            borderColor: \"red\",\n            backgroundColor: \"rgba(255,0,0,0.5)\",\n            fill: true,\n          },\n        ],\n      }}\n    />\n  ) : null;\n  const barChart = confirmed ? (\n    <Bar\n      data={{\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\n        datasets: [\n          {\n            label: \"People\",\n            backgroundColor: [\n              \"rgba(0, 0, 255, 0.5)\",\n              \"rgba(0, 255, 0, 0.5)\",\n              \"rgba(255, 0, 0, 0.5)\",\n            ],\n            data: [confirmed.value, recovered.value, deaths.value],\n          },\n        ],\n      }}\n      options={{\n        legend: { display: false },\n        title: { display: true, text: `Current state in ${country}` },\n      }}\n    />\n  ) : null;\n  return (\n    <div className={styles.container}>\n      {country.length ? barChart : lineChart}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React, { useEffect, useState } from \"react\";\n//import native select from materail UI\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\nimport styles from \"./CountryPicker.module.css\";\nimport { fetchCountries } from \"../../api/index\";\nconst CountryPicker = ({ handleCountryChange }) => {\n  const [fetchedCountries, setFetchedCountries] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setFetchedCountries(await fetchCountries());\n    };\n    fetchAPI();\n  }, [setFetchedCountries]);\n  console.log(fetchedCountries);\n  return (\n    <div>\n      <FormControl className={styles.formControl}>\n        <NativeSelect\n          defaultValue=\"\"\n          onChange={(e) => handleCountryChange(e.target.value)}\n        >\n          <option value=\"\">Global </option>\n          {fetchedCountries.map((country, i) => (\n            <option key={i} value={country}>\n              {country}\n            </option>\n          ))}\n        </NativeSelect>\n      </FormControl>\n    </div>\n  );\n};\n\nexport default CountryPicker;\n","import React, { Component } from \"react\";\nimport { Cards, Chart, CountryPicker } from \"./components\";\nimport styles from \"./App.module.css\";\nimport { fetchData } from \"./api/index\";\nimport coronaImage from \"./images/image.png\";\n// Adding commit for deployment-2\nclass App extends Component {\n  state = {\n    data: {},\n    country: {},\n  };\n  async componentDidMount() {\n    const data = await fetchData();\n    this.setState({ data });\n  }\n  handleCountryChange = async (country) => {\n    const fetchedData = await fetchData(country);\n    console.log(fetchedData);\n    //set the state\n    this.setState({ data: fetchedData, country: country });\n  };\n  render() {\n    return (\n      <div className={styles.container}>\n        <img className={styles.image} src={coronaImage} alt=\"covid-19\"></img>\n        <Cards data={this.state.data} />\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        <Chart data={this.state.data} country={this.state.country} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}